trigger:
- main

resources:
- repo: self

variables:
  image_repo: 'karolplonka/nodejs_api'
  tag: 'latest'

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      name: local
    steps:
    - task: Docker@2
      displayName: Build and push docker image
      inputs:
        containerRegistry: 'dockerhub.com_karolplonka'
        repository: '$(image_repo)'
        command: 'buildAndPush'
        Dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
        tags: '$(tag)'
    - task: PublishPipelineArtifact@1
      inputs:
        artifactName: 'manifests'
        path: 'manifests'    
        
- stage: Deploy
  displayName: Deploy to Dev
  dependsOn: Build
  variables:
    acrsecret: k8sexamplesacrauth
    insert_tag: '$(tag)'
  jobs:
  - deployment: Deploy
    displayName: Deploy to AKS
    environment: 'k8sdev.default'
    pool: 
      name: local
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'current'
              artifactName: 'manifests'
              targetPath: '$(System.ArtifactsDirectory)/manifests'
          

          - task: KubernetesManifest@0
            inputs:
              action: 'createSecret'
              namespace: 'default'
              secretType: 'dockerRegistry'
              secretName: '$(acrsecret)'
              dockerRegistryEndpoint: 'dockerhub.com_karolplonka'
          
          
          - task: replacetokens@3
            displayName: Replace Tokens
            inputs:
              rootDirectory: '$(Pipeline.Workspace)/manifests/'
              targetFiles: 'deployment.yml'
              encoding: 'auto'
              writeBOM: true
              actionOnMissing: 'warn'
              keepToken: false
              tokenPrefix: '!'
              tokenSuffix: '!'
              useLegacyPattern: false
              enableTransforms: false
              enableTelemetry: true

          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              namespace: 'default'
              manifests: |
                $(System.ArtifactsDirectory)/manifests/deployment.yml
                $(System.ArtifactsDirectory)/manifests/service.yml
              imagePullSecrets: |
                $(acrsecret)
              containers: |
                $(imageRepository):$(tag)

          - task: Kubernetes@1
            inputs:
              connectionType: 'Kubernetes Service Connection'
              kubernetesServiceEndpoint: 'kubernetes_githubapi'
              namespace: 'default'
              command: 'delete'
              arguments: '--all pods'
              secretType: 'generic'
              forceUpdate: false